arm64(RK3588 鲁班猫5) ubuntu 24.04
#编译 qt 6.8.3 源代码
1. 安装官方文档所需要的工具
sudo apt install \
    libfontconfig1-dev \
    libfreetype-dev \
    libgtk-3-dev \
    libx11-dev \
    libx11-xcb-dev \
    libxcb-cursor-dev \
    libxcb-glx0-dev \
    libxcb-icccm4-dev \
    libxcb-image0-dev \
    libxcb-keysyms1-dev \
    libxcb-randr0-dev \
    libxcb-render-util0-dev \
    libxcb-shape0-dev \
    libxcb-shm0-dev \
    libxcb-sync-dev \
    libxcb-util-dev \
    libxcb-xfixes0-dev \
    libxcb-xkb-dev \
    libxcb1-dev \
    libxext-dev \
    libxfixes-dev \
    libxi-dev \
    libxkbcommon-dev \
    libxkbcommon-x11-dev \
    libxrender-dev

2. 安装编译工具
  sudo apt install g++ cmake ninja-build nodejs
  
3. 安装 clang 相关
sudo apt install clang-18 libclang-18-dev llvm-18-dev clang

4. 安装低级音频模块后端
sudo apt install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libpulse-dev

5. 安装 html5lib， 不编译 webengine 模块可以不安装
sudo apt install python3-html5lib

6. 安装 qpa-xcb 支持库
sudo apt install libx11-dev libxext-dev libxfixes-dev libxi-dev libxrender-dev libxcb1-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-xinerama0-dev libxkbcommon-dev libxkbfile-dev libdrm-dev libxshmfence-dev

7. 根据chatgpt给的建议，一次性安装支持库
sudo apt install build-essential \
    libgl1-mesa-dev libxcb1-dev libxcb-xkb-dev libx11-xcb-dev \
    libxkbcommon-dev libfontconfig1-dev libfreetype6-dev \
    libssl-dev libsqlite3-dev libpulse-dev libudev-dev \
    libgtk-3-dev libxext-dev libxfixes-dev libxi-dev \
    libxrender-dev libxcb-render0-dev libxcb-shm0-dev \
    libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev \
    libxcb-randr0-dev libxcb-xinerama0-dev libxcb-util-dev \
    libxkbfile-dev libdrm-dev libxshmfence-dev



8. 配置
  cd 到源码目录，创建 build 目录并进入，运行
 sudo ../qt-everywhere-src-6.8.3/configure -prefix /opt/qt-6.8-arm64 -- -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release
 其中 /opt/qt-6.8-arm64 为安装目录

9. 编译
 sudo cmake --build . --parallel
 编译完成后，提示如下：
Qt is now configured for building. Just run 'cmake --build . --parallel'

Once everything is built, you must run 'cmake --install .'
Qt will be installed into '/opt/qt-6.8-arm64'

To configure and build other Qt modules, you can use the following convenience script:
        /opt/qt-6.8-arm64/bin/qt-configure-module

安装好了以后，添加安装目录到 PATH
In .profile (if your shell is bash, ksh, zsh or sh), add the following lines:

PATH=/opt/qt-6.8-arm64/bin:$PATH
export PATH

In .login (if your shell is csh or tcsh), add the following line:

setenv PATH /opt/qt-6.8-arm64/bin:$PATH